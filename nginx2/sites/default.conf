map $proxy_add_x_forwarded_for $client_ip {"~(?<IP>([0-9]{1,3}\.){3}[0-9]{1,3}),.*" $IP;}

log_format addHeaderlog '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$request_body" "$http_Authorization" "$http_x_duid" "$http_x_ver" "$upstream_http_x_rqid"';


server {
    listen 80;
    #server_name   {插入domain};
    server_tokens off;
    location / {
        proxy_pass http://backend:3000;
        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;
        proxy_buffer_size 64k;
        proxy_buffers   4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
        proxy_set_header   Host    $host;
        proxy_set_header   X-Real-IP   $remote_addr;
        proxy_set_header   X-Forwarded-For $client_ip;
        proxy_ignore_client_abort on;
        proxy_set_header   X-ClientIP $client_ip;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        #client_body_in_file_only on;
        access_log /var/log/nginx/access.log addHeaderlog;
    }
    location ~ ^/signalr/ {
      proxy_pass http://backend:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

   location /lbcheck.html {
     return 200 'YES';
   }
}
